["Homem", "encontrado", "morto", "em", "cisterna", "de", "camião", "em", "Estarreja", "Um", "homem", "de", "34", "anos", "funcionário", "da", "Transportadora", "J", "Amaral", "em", "Estarreja", "foi", "hoje", "encontrado", "morto", "no", "interior", "da", "cisterna", "de", "um", "camião", "diz", "a", "Lusa", "fonte", "da", "GNR", "de", "Aveiro", "O", "alerta", "foi", "dado", "pelas", "09:56", "e", "o", "homem", "que", "alegadamente", "estaria", "a", "fazer", "a", "manutenção", "da", "cisterna", "encontrava-se", "desaparecido", "desde", "sábado","acrescentou", "à", "Lusa", "o", "comandante", "dos", "Bombeiros", "de", "Estarreja", "Joaquim", "Rebelo", "A", "cisterna", "onde", "o", "funcionário", "da", "transportadora", "estava", "a", "trabalhar", "encontrava-se", "aberta", "acrescentou", "o", "graduado", "que", "não", "conseguiu", "determinar", "a", "causa", "da", "morte", "Ainda", "segundo", "a", "fonte", "da", "GNR", "compareceu", "no", "local", "a", "Delegada", "de", "Saúde", "e", "a", "Polícia", "Judiciária", "que", "tomou", "controlo", "da", "ocorrência", "No", "local", "esteve", "a", "Viatura", "Médica", "de", "Emergência", "e", "Reanimação", "de", "Aveiro", "que", "fez", "o", "transporte", "do", "cadáver", "para", "o", "Hospital", "Infante", "D.", "Pedro", "acrescentou", "a", "fonte", "dos", "bombeiros"]

Explanation:

The task is to extract all time expressions.

The format is JSON-parseable list of strings.

The input is "Homem encontrado morto em cisterna de camião em Estarreja".

The output is ["Homem", "encontrado", "morto", "em", "cisterna", "de", "camião", "em", "Estarreja", "Um", "homem", "de", "34", "anos", "funcionário", "da", "Transportadora", "J", "Amaral", "em", "Estarreja", "foi", "hoje",