["Homem preso preventivamente em Penafiel por obrigar companheira a prostituir-se", "Um juiz de instrução ordenou a prisão preventiva de um homem de 47 anos de idade que o Ministério Público (MP) de Penafiel indiciou por obrigar a mulher com quem vivia a prostituir-se, informou hoje fonte policial.", ...]
"""
import json
from nltk import word_tokenize
from nltk.corpus import stopwords
from nltk.stem import PorterStemmer
from nltk.tag import pos_tag
from collections import Counter

stoplist = set(stopwords.words('portuguese'))
ps = PorterStemmer()

def tokenizer(text):
   return [word for word in word_tokenize(text) if not word in stoplist and len(word)>2]

def stemmer(tokens):
   return [ps.stem(w) for w in tokens]

def lemmatization(tokens):
   return [lemma.lemmatize(t) for t in tokens]

def get_nouns(tokens):
   return [pos[0] for pos in pos_tag(tokens)]

def extract_events(text):
   events = []
   tokens = tokenizer(text)
   stems = stemmer(tokens)
   lemmas = lemmatization(tokens)
   nouns = get_nouns(tokens)
   
   #print("Tokens: ", tokens)
   #print("Stems: ", stems)
   #print("Lemmas: ", lemmas)
   #print("Nouns: ", nouns)

   for i, lemma in enumerate(lemmas):
       if lemma == "por":
           event = ""
           
           while (i+1 < len(lemmas)) and (lemmas[i+1] != "por"):
               event += lemmas[i+1]+" "
               
           events.append(event)
       
