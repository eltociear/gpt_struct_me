["Aug. 9", "Date"], ["Sept. 30", "Date"]
"""
import re
from datetime import date

def extract_time(text):
   """
   Extract time expressions from text
   
   Parameters
   ----------
   text : str
       Input text
       
   Returns
   -------
   list
       List of tuples containing extracted time expression and its type
   """
   # Regex patterns
   pattern = r'\b(?P<date>\d{1,2}[/-]\d{1,2}[/-]\d{2,4})|(?P<duration>[\d\.,]+[a-zA-Z]{2,})\b|\b(?P<set>[Tt]he (?P<day>[a-z]{3,}))\b'
   pattern_month = r"\b(?P<month>(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec))\b"
   pattern_year = r"\b(?P<year>\d{4})\b"
   pattern_day = r"\b(?P<day>\d{1,2})\b"
   pattern_hour = r"\b(?P<hour>\d{1,2}:\d{2}(am|pm)?)\b"
   pattern_minute = r"\b(?P<minute>\d{1,2}:\d{2}\s?minutes?)\b"
   pattern_second = r"\b(?P<second>\d{1,2}:\d{2}:\d{2}(am|pm)?)\b"
   pattern_weekday = r"\b(?P<weekday>[a-z]{3,})\b"
   
   # Extract time expressions from text
   date_list = re.findall(pattern, text)
   duration_list = []
   set_list = []
   for match in date_list:
       if 'date' in match:
           year = int(match['date'].split('-')[0])
           month = int(match['date'].split('-')[1].replace('/',''))
           day