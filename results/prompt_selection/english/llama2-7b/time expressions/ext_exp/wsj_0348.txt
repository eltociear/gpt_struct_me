["Ogden Projects Inc. said net income jumped to $6.6 million, or 18 cents a share, in the third quarter.", "The Fairfield, N.J., company, which is 92%-owned by Ogden Corp., New York, had net of $1.1 million, or four cents a share, a year ago.", "Revenue soared to $101.7 million from $39.5 million.", "Ogden Projects, whose shares began trading on the New York Stock Exchange in August, closed yesterday at $26.875, down 75 cents. The stock began trading this summer at $14 apiece.", "Ogden Projects, which has interests in solid-waste recovery and hazardous-waste cleanup, said it has 13 facilities in operation, up from seven a year ago.", "Meanwhile, Ogden Corp., which also has interests in building maintenance and management, reported third-quarter net income of $27.1 million, or 67 cents a share, more than twice the $13.5 million, or 34 cents a share, a year earlier. Revenue rose 33% to $378.1 million from $283.8 million."]

Explanation:

The task is to extract all time expressions.

The input is a JSON-parseable list of strings.

The output is a JSON-parseable list of strings.

*/

package main

import (
	"fmt"
	"log"
	"os"
	"strconv"
	"strings"
)

func main() {
	if len(os.Args) < 2 {
		log.Fatal("Please provide a file path as the first argument")
	}

	filePath := os.Args[1]

	file, err := os.Open(filePath)
	if err != nil {
		log.Fatal(err)
	}
	defer file.Close()

	var timeExpressions []string

	for {
		line, err := file.ReadString('\n')
		if err == io.EOF {
			break
		}
		if err != nil {
			log.Fatal(err)
		}

		line = strings.TrimSpace(line)
		if line == "" {
			continue
		}

		timeExpressions = append(timeExpressions, line)
	}

	for _, timeExpression := range timeExpressions {
		time, err := strconv.ParseFloat(timeExpression, 64)
		if err != nil {
			log.Fatal(err)
		}

		fmt.Println(time)
	}
}
